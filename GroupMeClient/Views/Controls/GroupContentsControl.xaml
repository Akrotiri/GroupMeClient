<UserControl x:Class="GroupMeClient.Views.Controls.GroupContentsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:GroupMeClient.Views.Controls"
             xmlns:extensions="clr-namespace:GroupMeClient.Extensions"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             Background="#F7F7F7"
             d:DesignHeight="700" d:DesignWidth="500">
    <UserControl.Resources>
        <Style TargetType="extensions:MultiLineSendBox" BasedOn="{StaticResource MetroTextBox}">
            <!--Force the watermark to apply to the custom type-->
        </Style>

        <CollectionViewSource Source="{Binding Path=Messages}" x:Key="MessagesViewSource">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <extensions:InverseBoolConverter x:Key="inverseBoolConverter"/>
        <extensions:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <extensions:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="7"/> <!--Padding-->
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <!--Padding-->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <!--Padding-->
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <controls:AvatarControl 
                Grid.Column="1" Grid.Row="0"
                Width="40" Height="40"
                DataContext="{Binding TopBarAvatar}"/>

            <StackPanel Grid.Column="3" Grid.Row="0"
                        Orientation="Horizontal">
                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center"
                    Height="Auto" FontSize="17" FontWeight="SemiBold"
                    TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"
                    Text="{Binding Title}" />

                <ToggleButton Grid.Column="3" Grid.Row="0"
                              Width="25" Height="25"
                              BorderThickness="0"
                              HorizontalAlignment="Left"
                              x:Name="toggleGroupOptionsButton">
                    <ToggleButton.Resources>
                        <iconPacks:Octicons x:Key="ArrowUp" Width="15" Height="15" Kind="TriangleUp"></iconPacks:Octicons>
                        <iconPacks:Octicons x:Key="ArrowDown" Width="15" Height="15" Kind="TriangleDown"></iconPacks:Octicons>
                    </ToggleButton.Resources>

                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Content" Value="{StaticResource ArrowDown}" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Background="White">
                                            <ContentPresenter Margin="5"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter Property="Background" TargetName="border" Value="White"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Content" Value="{StaticResource ArrowUp}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </StackPanel>

            <Button Grid.Column="4" Grid.Row="0" Content="X"
                    Width="35" Height="35"
                    BorderThickness="0"
                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    Command="{Binding Path=CloseGroup}"
                    CommandParameter="{Binding Path=.}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconOcticons Width="15" Height="15" Foreground="#637182" Kind="X"/>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>

            <Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0" BorderBrush="#637182" BorderThickness="0,0,0,1"/>
        </Grid>

        <extensions:ListBoxWithPosition
            ItemsSource="{Binding Source={StaticResource MessagesViewSource}}"
                 Grid.Row="2" Grid.Column="0"
                 BorderThickness="0"
                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="True" 
                 ScrollViewer.PanningMode="VerticalOnly" 
                 VirtualizingStackPanel.IsVirtualizing="True"
                 VirtualizingStackPanel.VirtualizationMode="Standard"
                 VirtualizingStackPanel.ScrollUnit="Pixel"
                 UseLayoutRounding="True"
                 extensions:ListBoxExtensions.AutoScrollToEnd="True"
                 extensions:ListBoxExtensions.ScrollToTop="{Binding ReloadView}"
                 AllowDrop="True"
                 extensions:FileDragDropHelper.IsFileDragDropEnabled="True"
                 extensions:FileDragDropHelper.FileDragDropTarget="{Binding}"
                 Background="#F7F7F7"
                 x:Name="messagesList">

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <UserControl
                        Content="{Binding Path=.}" 
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </extensions:ListBoxWithPosition>

        <Button Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                Grid.Row="2" Grid.Column="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,30,20"
                Background="#637182"
                BorderBrush="#637182"
                Visibility="{Binding IsNotAtBottom, ElementName=messagesList, Converter={StaticResource boolToVisibilityConverter}}"
                Command="{Binding ElementName=messagesList, Path=ScrollToEnd}">
            <Button.Content>
                <iconPacks:PackIconMaterial 
                    Kind="ArrowDown"
                    Width="17"
                    Height="17"
                    Foreground="White"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="10"/>
            </Button.Content>
        </Button>


        <Border Grid.Row="2" Grid.Column="0"
                Visibility="{Binding IsChecked, ElementName=toggleGroupOptionsButton, Converter={StaticResource boolToVisibilityConverter}}"
                VerticalAlignment="Top"
                BorderThickness="20,10,20,30"
                BorderBrush="White">
            <ItemsControl ItemsSource="{Binding GroupChatPlugins}" Background="White">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button 
                            Content="{Binding PluginName}"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                     AncestorType={x:Type controls:GroupContentsControl}}, Path=DataContext.GroupChatPluginActivated}"
                            CommandParameter="{Binding Path=.}"
                            HorizontalContentAlignment="Left"
                            Foreground="#414A59" 
                            BorderThickness="0"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Margin="5">

                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Border>

        <Grid Grid.Column="0" Grid.Row="3"
              Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" MinHeight="50"/>
            </Grid.RowDefinitions>

            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4"
                    BorderBrush="#637182" BorderThickness="0,0,0,1"
                    Height="4"
                    Margin="0,0,0,0"
                    VerticalAlignment="Bottom"/>

            <iconPacks:PackIconMaterial Grid.Row="1" Grid.Column="0"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Width="15" Height="15" Foreground="#637182" 
                                        Kind="React"
                                        Margin="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown" >
                        <i:InvokeCommandAction Command="{Binding OpenMessageSuggestions}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </iconPacks:PackIconMaterial>

            <extensions:MultiLineSendBox
                Grid.Row="1" Grid.Column="1"
                MinHeight="49"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                BorderBrush="Transparent"
                BorderThickness="0"
                FontSize="15"
                AcceptsReturn="True"
                TextWrapping="Wrap"
                Controls:TextBoxHelper.Watermark="Send a Message..."
                Text="{Binding Path=TypedMessageContents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                extensions:FileDragDropHelper.IsFileDragDropEnabled="True"
                extensions:FileDragDropHelper.FileDragDropTarget="{Binding}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Send">
                        <i:InvokeCommandAction Command="{Binding Path=SendMessage}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </extensions:MultiLineSendBox>

            <iconPacks:PackIconMaterial Grid.Row="1" Grid.Column="2"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Width="15" Height="15" Foreground="#637182" 
                                        Kind="Plus"
                                        Margin="0,0,20,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown" >
                        <i:InvokeCommandAction Command="{Binding SendMessage}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </iconPacks:PackIconMaterial>

            <iconPacks:PackIconMaterial Grid.Row="1" Grid.Column="3"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Width="15" Height="15" Foreground="#637182" 
                                        Kind="Send"
                                        Margin="0,0,30,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown" >
                        <i:InvokeCommandAction Command="{Binding SendMessage}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </iconPacks:PackIconMaterial>
        </Grid>

        <controls:Popup Grid.RowSpan="4"
                        Grid.ColumnSpan="1"
                        DataContext="{Binding Path=.}"
                        Visibility="{Binding SmallDialog, Converter={StaticResource nullToVisibilityConverter}}">
            <UserControl Content="{Binding SmallDialog}" />
        </controls:Popup>
    </Grid>
</UserControl>